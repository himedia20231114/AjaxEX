plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	// thymeleaf - 라이브러리 2개
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	
	// Spring MVC 개발 환경 
	implementation 'org.springframework.boot:spring-boot-starter-web'
	
	// devtools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	// h2 DataBase 
	runtimeOnly 'com.h2database:h2'
	
	// JUnit Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
	// JPA 
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	
 
    //oracle 라이브러리 
	//implementation 'com.oracle.database.jdbc:ojdbc10'
	implementation 'com.oracle.database.jdbc:ojdbc11'
	
	//JDBC
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	
	//MySQL Driver
	implementation 'com.mysql:mysql-connector-j'
	
	//modelmapper 라이브러리   : dto 필드의 값을 Entity 클래스에 매핑  
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.9'
	

	//JUnit Test 라이브러리
	testImplementation 'org.junit.jupiter:junit-jupiter' 
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.springframework.security:spring-security-test'
	
	
	
}

tasks.named('test') {
	useJUnitPlatform()
}
